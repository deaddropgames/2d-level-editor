apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "java"

configurations {
    javac2
}

dependencies {
    javac2 name: 'javac2'
    javac2 name: 'jdom'
    javac2 name: 'asm-all'
    javac2 name: 'jgoodies-forms'
}

repositories {
    mavenCentral()
    mavenLocal()
    flatDir {
        dirs ideaHome + '/lib'
    }
}

dependencies {
    compile group: "com.badlogicgames.gdx", name: "gdx", version: "1.9.5"
    compile group: "org.apache.httpcomponents", name: "httpclient", version: "4.5"
}

sourceCompatibility = 1.7
sourceSets.main.java.srcDirs = [ "src/" ]
sourceSets.main.resources.srcDirs = sourceSets.main.java.srcDirs
version = '0.5.0'

project.ext.mainClassName = "com.deaddropgames.editor.LevelEditorMain"

task run(dependsOn: classes, type: JavaExec) {
    main = "com.deaddropgames.editor.LevelEditorMain"
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
}

task dist(type: Jar) {
    // TODO: this currently only works on my home environment
    /*doFirst {
        copy {
            from "../stunt-mountain/desktop/build/libs/"
            into "res/bin"
            include "desktop-*.jar"
        }
        copy {
            from("conf") {
                include "*.json"
                filter{String line -> line.replaceAll("\\s+\"simJar\":.+", "    \"simJar\": \"bin/desktop-1.0.jar\",")}
            }
            into "res/conf"
        }
    }*/
    from files(sourceSets.main.output.classesDir)
    from files(sourceSets.main.output.resourcesDir)
    from {configurations.compile.collect {zipTree(it)}}

    manifest {
        attributes 'Main-Class': project.mainClassName
    }
}

task copyUiDesignerClasses(type: Copy) {
    project.sourceSets.main.output.classesDir.mkdirs()
    from zipTree(ideaHome + '/lib/javac2.jar')
    into project.sourceSets.main.output.classesDir
    include 'com/intellij/uiDesigner/core/**'
}

task compileForms << {
    ant.taskdef name: 'javac2', classname: 'com.intellij.ant.Javac2', classpath: configurations.javac2.asPath
    ant.javac2 srcdir: project.sourceSets.main.java.srcDirs.join(':'),
            classpath: project.sourceSets.main.compileClasspath.asPath,
            destdir: project.sourceSets.main.output.classesDir,
            source: sourceCompatibility,
            target: targetCompatibility,
            includeAntRuntime: false
}

dist.dependsOn classes
dist.dependsOn compileForms
run.dependsOn compileForms

jar.dependsOn('compileForms')
compileForms.dependsOn('copyUiDesignerClasses')